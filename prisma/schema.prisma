// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  clerkUserId String
  name        String
  email       String
  phoneNumber String?
  imageUrl    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  //address
  address Address[]
  orders  Orders[]
  cart    Cart[]
}

model Address {
  id         String   @id @default(cuid())
  streetName String
  postOffice String
  zipCode    String
  District   String
  State      String
  isDefault  Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Category {
  id               String   @id @default(cuid())
  name             String
  parentCategoryId String?
  slug             String?
  Product          Product? @relation(fields: [productId], references: [id])
  productId        String?
}

model Product {
  id             String   @id @default(cuid())
  name           String
  price          Int
  inventoryCount Int
  images         String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  //relation with Category
  category Category[]
}



model Cart {
  id     String  @id @default(cuid())
  User   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Orders {
  id          String  @id @default(cuid())
  totalAmount BigInt
  status      Status
  User        User?   @relation(fields: [userId], references: [id])
  userId      String?
}

enum Status {
  DRAFT
  PENDING
  PAID
  SHIPPED
  DELIVERED
  CANCELLED
}
